@using System.Configuration;
@using System.Web.Mvc;

@model RM.MailshotsOnline.Entities.PageModels.Register

<script src='https://www.google.com/recaptcha/api.js'></script>

@using (Html.BeginUmbracoForm("RegisterForm", "RegisterSurface", null, new Dictionary<string, object> { { "class" , "register__form" } })) {
        <section class="content-box register-stage">

            <h2 class="heading01 heading01--line-on-sides"><span class="text">First we need a few details</span></h2>

            <div class="form-row">
                <div class="required-field">@Html.DisplayFor(m => m.RequiredFieldsLabel)</div>
            </div>

            <div class="form-row validation-messages">
                <p>@Html.ValidationMessageFor(m => m.ViewModel.Email)</p>
                <p>@Html.ValidationMessageFor(m => m.ViewModel.ConfirmEmail)</p>
                <p>@Html.ValidationMessageFor(m => m.ViewModel.FirstName)</p>
                <p>@Html.ValidationMessageFor(m => m.ViewModel.LastName)</p>
                <p>@Html.ValidationMessageFor(m => m.ViewModel.Title)</p>
                <p>@Html.ValidationMessageFor(m => m.ViewModel.Password)</p>
                <p>@Html.ValidationMessageFor(m => m.ViewModel.ConfirmPassword)</p>
                <p>@Html.ValidationMessageFor(m => m.ViewModel.AgreeToTermsAndConditions)</p>
            </div>

            <div class="form-row">
                @Html.LabelFor(m => m.ViewModel.Title, Model.TitleLabel)
                <div class="input-wrapper">
                    @Html.DropDownListFor(m => m.ViewModel.Title, new SelectList(Model.TitleOptions, "Key", "Value", Model.ViewModel.Title), new { data_bind = "value: stage1.Title" })
                </div>
            </div>


            <div class="form-row">
                @Html.LabelFor(m => m.ViewModel.FirstName, Model.FirstNameLabel)
                <div class="input-wrapper">
                    @Html.TextBoxFor(m => m.ViewModel.FirstName, new { data_bind = "value: stage1.FirstName" })
                </div>
            </div>

            <div class="form-row">
                @Html.LabelFor(m => m.ViewModel.LastName, Model.LastNameLabel)
                <div class="input-wrapper">
                    @Html.TextBoxFor(m => m.ViewModel.LastName, new { data_bind = "value: stage1.LastName" })
                </div>
            </div>


            <div class="form-row">
                @Html.LabelFor(m => m.ViewModel.Email, Model.EmailLabel)
                <div class="input-wrapper" >
                    @Html.TextBoxFor(m => m.ViewModel.Email, new { data_bind = "value: stage1.Email" })
                </div>
            </div>


            <div class="form-row">
                @Html.LabelFor(m => m.ViewModel.ConfirmEmail, Model.ConfirmEmailLabel)
                <div class="input-wrapper">
                    @Html.TextBoxFor(m => m.ViewModel.ConfirmEmail, new { data_bind = "value: stage1.ConfirmEmail" })
                </div>
            </div>


            <div class="form-row">
                @Html.LabelFor(m => m.ViewModel.Password, Model.PasswordLabel)
                <div class="input-wrapper">
                    @Html.PasswordFor(m => m.ViewModel.Password, new { data_bind = "value: stage1.Password" })
                </div>
            </div>


            <div class="form-row">
                @Html.LabelFor(m => m.ViewModel.ConfirmPassword, Model.ConfirmPasswordLabel)
                <div class="input-wrapper">
                    @Html.PasswordFor(m => m.ViewModel.ConfirmPassword, new { data_bind = "value: stage1.ConfirmPassword" })
                </div>
            </div>


            <hr>

            <h3 class="heading01">We would like to keep you informed</h3>

            <p>For full details of how we collect, use, share and protect your information, please refer to our <a href="/privacy-policy" title="Please read our Privacy Policy">Privacy Policy</a></p>

            @* TODO: Mark - please change the opt-in/opt-out checkboxes to the below. *@

            <div class="form-row form-row--align-left">
                <div class="input-wrapper">
                    <input id="royalMailMailAgreement" class="check-box" type="checkbox" value="true" data-bind="value: stage1.royalMailMailAgreement">
                </div>
                <label for="royalMailMailAgreement">I agree to be contacted about Royal Mail products, services, special offers and promotions. This could include post, email, telephone and SMS.</label>
            </div>
            <div class="form-row form-row--align-left">
                <div class="input-wrapper">
                    <input id="thirdPartyMailAgreement" class="check-box custom-checkbox" type="checkbox" value="true" data-bind="value: stage1.thirdPartyMailAgreement">
                </div>
                <label for="thirdPartyMailAgreement">I agree to be contacted about about products, services, special offers and promotions by carefully selected third parties. This could include post, email, telephone and SMS.</label>
            </div>

            @* ORIGINAL OPT-INs
            <div>
                <span for="RoyalMailContactOptions">@Model.RoyalMailContactOptionsDisclaimer</span>
            </div>
            <div>
                <label for="RoyalMailContactOptions">@Model.RoyalMailContactOptionsLabel</label>
                @Html.EditorFor(m => m.ViewModel.MarketingPreferencesViewModel.RoyalMailMarketingPreferences)
            </div>
            <div>
                <span for="ThirdPartyContactOptionsDisclaimer">@Model.ThirdPartyContactOptionsDisclaimer</span>
            </div>
            <div>
                <label for="ThirdPartyContactOptions">@Model.ThirdPartyContactOptionsLabel</label>
                @Html.EditorFor(m => m.ViewModel.MarketingPreferencesViewModel.ThirdPartyMarketingPreferences)
            </div>
            <div>
            </div> *@

            @* END TODO *@


            <hr>

            <div class="form-row form-row--align-right">

                @* TODO: Mark - Please add a link to T&Cs in the copy. *@
                @Html.LabelFor(m => m.ViewModel.AgreeToTermsAndConditions, Model.AgreeToTermsAndConditionsLabel)
                @* END TODO *@

                @Html.CheckBoxFor(m => m.ViewModel.AgreeToTermsAndConditions, new { data_bind = "checked: stage1.AgreeToTermsAndConditions" })
            </div>

            <div class="form-row form-row--align-right">
                <a href="" class="btn btn--blue btn--next" data-bind="click: $root.proceedToStage2" title="">Next</a>
            </div>
        </section>




        <section class="content-box register-stage">
            <h2 class="heading01 heading01--line-on-sides">
                <span class="text">About your organisation</span>
            </h2>

            <div class="form-row">
                <div class="required-field"><span class="required-field__star">*</span> Indicates a required field</div>
            </div>

            <div class="form-row">
                <label for="ViewModel_PostCode"><span class="required-field__star">*</span>Postcode:</label>
                <div class="input-wrapper">
                    <input class="text-box single-line" id="ViewModel_PostCode" name="ViewModel.PostCode" type="text" value="">
                </div>
            </div>

            <div class="form-row form-row--align-right">
                <a href="" class="btn btn--blue btn--next" data-bind="click: $root.proceedToNextStage" title="">Find Address</a>
            </div>
        </section>





        <section class="content-box register-stage">

            <div class="form-row">
                <div class="required-field">@Html.DisplayFor(m => m.RequiredFieldsLabel)</div>
            </div>

            <div class="form-row validation-messages">
                <p>@Html.ValidationMessageFor(m => m.ViewModel.OrganisationDetailsViewModel.Postcode)</p>
                <p>@Html.ValidationMessageFor(m => m.ViewModel.OrganisationDetailsViewModel.OrganisationName)</p>
                <p>@Html.ValidationMessageFor(m => m.ViewModel.OrganisationDetailsViewModel.JobTitle)</p>
                <p>@Html.ValidationMessageFor(m => m.ViewModel.OrganisationDetailsViewModel.FlatNumber)</p>
                <p>@Html.ValidationMessageFor(m => m.ViewModel.OrganisationDetailsViewModel.BuildingNumber)</p>
                <p>@Html.ValidationMessageFor(m => m.ViewModel.OrganisationDetailsViewModel.BuildingName)</p>
                <p>@Html.ValidationMessageFor(m => m.ViewModel.OrganisationDetailsViewModel.Address1)</p>
                <p>@Html.ValidationMessageFor(m => m.ViewModel.OrganisationDetailsViewModel.Address2)</p>
                <p>@Html.ValidationMessageFor(m => m.ViewModel.OrganisationDetailsViewModel.City)</p>
                <p>@Html.ValidationMessageFor(m => m.ViewModel.OrganisationDetailsViewModel.Country)</p>
                <p>@Html.ValidationMessageFor(m => m.ViewModel.OrganisationDetailsViewModel.WorkPhoneNumber)</p>
                <p>@Html.ValidationMessageFor(m => m.ViewModel.OrganisationDetailsViewModel.MobilePhoneNumber)</p>
                <p>@Html.ValidationMessageFor(m => m.ViewModel.IsRecaptchaValidated)</p>
            </div>




            <div class="form-row">
                @Html.LabelFor(m => m.ViewModel.OrganisationDetailsViewModel.OrganisationName, Model.OrganisationNameLabel)
                <div class="input-wrapper">
                    @Html.TextBoxFor(m => m.ViewModel.OrganisationDetailsViewModel.OrganisationName)
                </div>
            </div>

            <div class="form-row">
                @Html.LabelFor(m => m.ViewModel.OrganisationDetailsViewModel.JobTitle, Model.JobTitleLabel)
                <div class="input-wrapper">
                    @Html.TextBoxFor(m => m.ViewModel.OrganisationDetailsViewModel.JobTitle)
                </div>
            </div>

            <div class="form-row">
                @Html.LabelFor(m => m.ViewModel.OrganisationDetailsViewModel.FlatNumber, Model.FlatNumberLabel)
                <div class="input-wrapper">
                    @Html.TextBoxFor(m => m.ViewModel.OrganisationDetailsViewModel.FlatNumber)
                </div>
            </div>

            <div class="form-row">
                @Html.LabelFor(m => m.ViewModel.OrganisationDetailsViewModel.BuildingNumber, Model.BuildingNumberLabel)
                <div class="input-wrapper">
                    @Html.TextBoxFor(m => m.ViewModel.OrganisationDetailsViewModel.BuildingNumber)
                </div>
            </div>

            <div class="form-row">
                @Html.LabelFor(m => m.ViewModel.OrganisationDetailsViewModel.BuildingName, Model.BuildingNameLabel)
                <div class="input-wrapper">
                    @Html.TextBoxFor(m => m.ViewModel.OrganisationDetailsViewModel.BuildingName)
                </div>
            </div>

            <div class="form-row">
                @Html.LabelFor(m => m.ViewModel.OrganisationDetailsViewModel.Address1, Model.Address1Label)
                <div class="input-wrapper">
                    @Html.TextBoxFor(m => m.ViewModel.OrganisationDetailsViewModel.Address1)
                </div>
            </div>

            <div class="form-row">
                @Html.LabelFor(m => m.ViewModel.OrganisationDetailsViewModel.Address2, Model.Address2Label)
                <div class="input-wrapper">
                    @Html.TextBoxFor(m => m.ViewModel.OrganisationDetailsViewModel.Address2)
                </div>
            </div>

            <div class="form-row">
                @Html.LabelFor(m => m.ViewModel.OrganisationDetailsViewModel.City, Model.CityLabel)
                <div class="input-wrapper">
                    @Html.TextBoxFor(m => m.ViewModel.OrganisationDetailsViewModel.City)
                </div>
               
            </div>

@*             <div class="form-row">
                @Html.LabelFor(m => m.ViewModel.OrganisationDetailsViewModel.Postcode, Model.PostcodeLabel)
                <div class="input-wrapper">
                    @Html.TextBoxFor(m => m.ViewModel.OrganisationDetailsViewModel.Postcode)
                </div
            </div>
 *@
            <div class="form-row">
                @Html.LabelFor(m => m.ViewModel.OrganisationDetailsViewModel.Country, Model.CountryLabel)
                <div class="input-wrapper">
                    @Html.TextBoxFor(m => m.ViewModel.OrganisationDetailsViewModel.Country)
                </div>
            </div>

            <div class="form-row">
                @Html.LabelFor(m => m.ViewModel.OrganisationDetailsViewModel.WorkPhoneNumber, Model.WorkPhoneNumberLabel)
                <div class="input-wrapper">
                    @Html.TextBoxFor(m => m.ViewModel.OrganisationDetailsViewModel.WorkPhoneNumber)
                </div>
            </div>

            <div class="form-row">
                @Html.LabelFor(m => m.ViewModel.OrganisationDetailsViewModel.MobilePhoneNumber, Model.MobilePhoneNumberLabel)
                <div class="input-wrapper">
                    @Html.TextBoxFor(m => m.ViewModel.OrganisationDetailsViewModel.MobilePhoneNumber)
                </div>
            </div>

            <div class="form-row">
                @Html.HiddenFor(m => m.ViewModel.IsRecaptchaValidated)
                <div class="g-recaptcha" data-sitekey="@ConfigurationManager.AppSettings["RecaptchaSiteKey"]"></div>
            </div>


            <div class="form-row form-row--align-right">
                <a href="" class="btn btn--green" data-bind="click: $root.submitRegistration" title="">Register</a>
            </div>

            <input type="submit" value="@Model.RegisterCtaText"  />
        </section>

}

